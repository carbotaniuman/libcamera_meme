name: Build driver
on:
  push:
    branches:
      - 'master'
      - 'releases/**'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v3
    - uses: pguyot/arm-runner-action@v2
      with:
        base_image: raspios_lite_arm64:latest
        cpu: cortex-a7
        image_additional_mb: 1500
        bind_mount_repository: true
        commands: |
            apt-get update
            apt-get install -y libopencv-dev libegl1-mesa-dev libcamera-dev cmake build-essential libdrm-dev libgbm-dev openjdk-17-jdk
            cmake -B build-pi -DCMAKE_BUILD_TYPE=Release
            cmake --build build-pi -- -j

    - run: find .

    - uses: actions/upload-artifact@master
      with:
        name: libcamera-driver
        path: build-pi/*.so
    - uses: actions/upload-artifact@master
      with:
        name: libcamera-meme
        path: build-pi/libcamera_meme

    # Push to dev release on pushes to master
    - uses: pyTooling/Actions/releaser@r0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: 'Dev'
        rm: true
        files: |
          build-pi/*.so
      if: github.event_name == 'push'

    # Push to actual release, if tagged
    - uses: softprops/action-gh-release@v1
      with:
        files: |
          build-pi/*.so
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-chroot:
    runs-on: ubuntu-latest
    container:
      image: mcm001/photon-libcamera-builder-entry:latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v3
    - run: |
        find .
        cmake -B build-pi -DCMAKE_BUILD_TYPE=Release
        cmake --build build-pi -- -j 
    - uses: actions/upload-artifact@master
      with:
        name: libcamera-driver
        path: build-pi/*.so
